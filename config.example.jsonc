{
  // The port to listen server on for HTTP requests, default is 80.
  "port": 80,

  // The port to listen server on for HTTPs requests, default is 0 (disabled). Change to 443 if you want to enable it.
  // You don't need to provide a certificate, the server uses ACME protocol to get a free certificate from Let's Encrypt.
  // Note: if you are running the server in a docker container, you need to expose port `443:443`.
  "tlsPort": 0,

  // Allowed CORS origins, default is allow all origins.
  // Note: A valid origin must be a valid URL, including the protocol, domain, and port. e.g. "https://example.com".
  "corsAllowOrigins": [],

  // Maximum number of concurrent build process, default equals to the number of CPU cores.
  "buildConcurrency": 0,

  // The wait time for incoming requests to wait for the build process to finish, default is 30 seconds.
  "buildWaitTime": 30,

  // Compress http response body with gzip/brotli, default is true.
  "compress": true,

  // Minify built js/css files, default is true,
  "minify": true,

  // Generate source map for built js/css files, default is true.
  "sourceMap": true,

  // The storage option.
  // Examples:
  // - Use local file system as the storage:
  //   "storage": {
  //     "type": "fs",
  //     "endpoint": "/path/to/storage"
  //   }
  // - Use S3-compatible storage:
  //   "storage": {
  //     "type": "s3",
  //     "endpoint": "https://bucket.s3.amazonaws.com",
  //     "region": "us-west-1",
  //     "accessKeyID": "***",
  //     "secretAccessKey": "***"
  //   }
  "storage": {
    // storage type, supported types are ["fs", "s3"], default is "fs".
    "type": "fs",
    // storage endpoint, default is "~/.esmd/storage".
    "endpoint": "~/.esmd/storage",
    // storage region for s3.
    "region": "",
    // storage access key id for s3.
    "accessKeyID": "",
    // storage secret access key for s3.
    "secretAccessKey": ""
  },

  // The custom landing page options, default is empty.
  // The server will proxy the `/` request to the `origin` server if it's provided.
  // If your custom landing page has own assets, you also need to provide those asset paths in the `assets` field.
  "customLandingPage":  {
    "origin": "https://example.com",
    "assets": [
      "/favicon.ico",
      "/assets/app.js",
      "/assets/app.css"
    ]
  },

  // The work directory for the build system, default is "~/.esmd".
  "workDir": "~/.esmd",

  // The log directory, default is "~/.esmd/log".
  "logDir": "~/.esmd/log",

  // The log level, available values are ["debug", "info", "warn", "error"], default is "info".
  "logLevel": "info",

  // Enable access log, default is disabled.
  // The access log will be written to the log directory with the name "access-<date>.log".
  "accessLog": false,

  // The cache TTL for npm packages query, default is 600 seconds (10 minutes).
  "npmQueryCacheTTL": 600,

  // The global npm registry, default is "https://registry.npmjs.org/".
  "npmRegistry": "https://registry.npmjs.org/",

  // The npm access token for the global npm registry, default is empty.
  "npmToken": "",

  // These two fields are used for basic authentication towards the global npm registry,
  // default for both is empty.
  "npmUser": "",
  "npmPassword": "",

  // Registries for scoped packages. This will ensure packages with these scopes get downloaded
  // from specific registry, default is empty.
  "npmScopedRegistries": {
    "@scope_name": {
      "registry": "https://your-registry.com/",
      "token": "",
      "user": "",
      "password": ""
    }
  },

  // The list to only allow some packages or scopes, default allow all.
  "allowList": {
    "packages": ["@scope_name/package_name"],
    "scopes": ["@scope_name"]
  },

  // The list to ban some packages or scopes, default no ban.
  "banList": {
    "packages": ["@scope_name/package_name"],
    "scopes": [{
      "name": "@scope_name",
      "excludes": ["package_name"]
    }]
  }
}
